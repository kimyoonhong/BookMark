*자바 동작 과정

1. 코드 작성
2. 코드 컴파일
3. JVM으로 실행

ex) Hello world 출력과정  

1. 코드작성
 - 에디터를 사용해서 소스코드를 입력한후 .java 확장자로 저장한다.
 - 에디터는 메모장과 같은 간단한 텍스트 에디터를 사용할 수도 있고, 이클립스나 인텔리제이와 같은 통합 개발 환경 ( IDE )를 사용할 수도 있다.
 
 * 통합 개발 환경 ( IDE : Integrated Development Environment )
 : 텍스트를 수정하여 소스코드를 작성하는 에디터와 컴파일하고 실행하는 디버거와 같이 소프트웨어 개발 프로세스를 지원하는 많은 도구들을 묶어서 제공하는 것.
   자바IDE로는 대표적으로 이클립스, 인텔리제이가 있다.
 
 Main.java 파일 작성 ( 예시코드 )
 
 public class Main{
	  public static void main(String[] args) {
		
		System.out.println("hello world");
	}
}

2. 코드 컴파일
 - 작성이 완료된 소스코드.java 파일을 자바 컴파일러로 컴파일한다.
 - 자바 컴파일러가 소스코드.java를 확장자가 .class인 바이트 코드로 변환한다.
 - 확장자가 .class인 파일을 클래스 파일이라고 한다.
   
	
   
   cmd 창에서 Main.java의 디렉토리로 접근 후, 
   
   javac Main.java 
     
     -> .java 파일을 .class 라는 Java byte code로 변환시켜준다. 
      하지만 Byte Code는 기계어가 아니기 때문에 OS에서 바로 실행되지 않는다.
      이때, JVM( Java Virtual Machine)이 Byte Code를 이해할 수 있도록 해석을 도와준다.

3. JVM으로 실행
 * 클래스 적재기 ( Class Loader )
 	- 클래스 적재와 바이트코드 검증 및 실행
 	- JVM속에 들어있는 클래스 적재기 ( Class Loader )가 작성한 프로그램내의 클래스파일과 함께 실행하며 필요한 필수 클래스 파일들을 메모리에 올린다.
 	- 클래스 파일은 로컬 컴퓨터의 디스크에서도 가져올 수 있지만, 네트워크를 통해서도 가져올 수 있다. ( URLClassLoader )

* 바이트 코드 검증기 ( ByteCode Verifier )
	- 가져오는 클래스들의 바이트 코드들이 이상이 없는지, 자바의 보안규칙을 위배하지 않는지 검사한다.
	- 자바는 네트워크를 통하여 전송된 자바 프로그램들이 컴퓨터를 훼손시키는것을 방지하기 위해서 엄격한 보안규칙을 가지고 있다.

* 실행



    마찬가지로 cmd 창에서 디렉토리로 접근 후,
    
    java Main
    
    cmd 창 : hello world
    
  
  
